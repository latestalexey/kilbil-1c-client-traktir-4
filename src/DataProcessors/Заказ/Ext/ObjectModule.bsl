
// Создание нового заказа
//
// Параметры:
//	ОбъектВвода	- ссылка на посадочное место или клиента, для которого создается заказ
//
// Возвращаемое значение:
//	Булево		- создан или нет
//
Функция СоздатьНовый(ОбъектВвода=Неопределено, ПриРазделении=Ложь) Экспорт
	
	//// ....
	
	Заказ.Дата					= ТекущаяДата();
	Заказ.Автор					= глПользователь;
	Заказ.Смена					= ИнтерфейсРМ.ТекущаяСмена();
	Заказ.МестоРеализации		= глПараметрыРМ.МестоРеализации;
	Заказ.ПосадочноеМесто		= ПосадочноеМесто;
	Заказ.Клиент				= Клиент;
	Заказ.КоличествоПосетителей	= КолвоПосетителей;
	Заказ.Доставка				= Доставка;
	Заказ.ВремяДоставки			= ТекущаяДата() + ?(Доставка, (Константы.ОсновноеВремяДоставки.Получить() * 60), 0);
	
	// KilBil_БонуснаяСистема
	//// { 
	Заказ.KilBil_ИДКлиента 	   = Неопределено;
	Заказ.KilBil_НомерТелефона = "";
	Заказ.KilBil_КодКарты 	   = "";
	Заказ.KilBil_Баланс    	   = 0;
	Заказ.KilBil_Списано   	   = 0;
	Заказ.KilBil_Начислено 	   = 0;
	
	KilBil_ИДКлиента 	 = Неопределено;
	KilBil_НомерТелефона = "";
	KilBil_КодКарты		 = "";
	KilBil_Баланс    	 = 0;
	KilBil_Списано   	 = 0;
	KilBil_Начислено 	 = 0;
	//// } 
	
	//// ....
	
КонецФункции

// Чтение заказа
//
Функция ПрочитатьЗаказ(ТолькоДляЗаписи=Ложь) Экспорт
	
	//// ....
	
	Если ИспользоватьЗаказТоварыДопИнф Тогда
		СоответствиеИдСтроки = ПолучитьСтруктуруЗаказТоварыДопИнф();
	КонецЕсли;
	
	СоответствиеИдСтрокиУТМ = ЕГАИС_Клиент.СоответствиеИдСтрокиАкцизнаяМарка(Заказ.Ссылка);
	
	// KilBil_БонуснаяСистема
	//// { 
	KilBil_ИДКлиента 	 = Заказ.KilBil_ИДКлиента;
	KilBil_НомерТелефона = Заказ.KilBil_НомерТелефона;
	KilBil_КодКарты		 = Заказ.KilBil_КодКарты;
	KilBil_Баланс    	 = Заказ.KilBil_Баланс;
	KilBil_Списано   	 = Заказ.KilBil_Списано;
	KilBil_Начислено 	 = Заказ.KilBil_Начислено;
	//// }
	
	//// ....
	
КонецФункции

// Запись заказа
//
Функция ЗаписатьЗаказ(ИзОплаты=Ложь) Экспорт
	
	//// ....
	
	ТекДата = ТекущаяДата();
	ВремяСекунд = Формат(ТекДата-НачалоДня(ТекДата),"ЧГ=");
	АвторПоУмолчанию = ?(ФоновыйРежим, ?(ЗначениеЗаполнено(Заказ.Автор), Заказ.Автор, глПользователь), ?(глПользователь <> Неопределено, глПользователь, Заказ.Автор));	
	
	// KilBil_БонуснаяСистема
	//// { 
	Заказ.KilBil_ИДКлиента 	   = KilBil_ИДКлиента;
	Заказ.KilBil_НомерТелефона = KilBil_НомерТелефона;
	Заказ.KilBil_КодКарты	   = KilBil_КодКарты;
	Заказ.KilBil_Баланс    	   = KilBil_Баланс;
	Заказ.KilBil_Списано   	   = KilBil_Списано;
	Заказ.KilBil_Начислено 	   = KilBil_Начислено;
	//// }
	
	//// ....
	
КонецФункции

// Обработка внешних событий
//
Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные) Экспорт
	
	//// ....
	
	Если Источник = "BarCodeScaner" Тогда
		
		Если СтрДлина(СокрЛП(_Знач)) = 68 Тогда // Акцизная марка

			//ПоискПоАлкоКоду(Защита.КодНоменклатурыЕГАИСПоPDF417(_Знач));
			ПоискПоАлкоКоду(_Знач);
						
		Иначе
			// KilBil_БонуснаяСистема
			//// {
			//ТоварНайден = ВводПоКоду("Идентификатор_"+_Знач);
			//
			//Если НЕ ТоварНайден Тогда
			//	ОбработкаКартыДоступа("Идентификатор_"+_Знач);
			//КонецЕсли;
			//
			Если KilBil_БонуснаяСистема.ИспользоватьБонуснуюСистему() И 
				 KilBil_БонуснаяСистема.ИспользоватьКарты() И
				 KilBil_БонуснаяСистема.ПроверитьПрефиксКарты(_Знач) Тогда
				KilBil_ОбработатьБонуснуюКарту(_Знач); 
			Иначе
				ТоварНайден = ВводПоКоду("Идентификатор_"+_Знач);
				
				Если НЕ ТоварНайден Тогда
					ОбработкаКартыДоступа("Идентификатор_"+_Знач);
				КонецЕсли;
			КонецЕсли; 
			//// }		
		КонецЕсли;
		
	ИначеЕсли (Источник="MagneticStripeCardReader") ИЛИ (Лев(Источник,11)="RadioReader") Тогда
		// KilBil_БонуснаяСистема
		//// {
		//ОбработкаКартыДоступа("Идентификатор_"+_Знач);
		//
		Если KilBil_БонуснаяСистема.ИспользоватьБонуснуюСистему() И 
			 KilBil_БонуснаяСистема.ИспользоватьКарты() И
			 KilBil_БонуснаяСистема.ПроверитьПрефиксКарты(_Знач) Тогда
			KilBil_ОбработатьБонуснуюКарту(_Знач); 
		Иначе
			ОбработкаКартыДоступа("Идентификатор_"+_Знач);
		КонецЕсли; 
		//// }		
	ИначеЕсли Источник = "TraktirFOv4_KBHOOK"  Тогда
		ОбработкаСпецКлавиатуры(_Знач);
		
	ИначеЕсли Источник = "AllBottle"  Тогда
		ОбработкаНаливайки(_Знач);
		
	КонецЕсли;
	
КонецПроцедуры

// 
//// 
Процедура KilBil_ОбработатьБонуснуюКарту(Значение) 
	
	ФормаБонуснойСистемы = ПолучитьФорму("KilBil_ФормаБонуснойСистемы");
	ФормаБонуснойСистемы.мКодКарты 		   = Значение;
	ФормаБонуснойСистемы.мПоискПоКодуКарты = Истина;
	
	Результат = ФормаБонуснойСистемы.ОткрытьМодально();
	
	Если ЗначениеЗаполнено(Результат) Тогда
		KilBil_ИДКлиента 	 = Результат.ИДКлиента;
		KilBil_НомерТелефона = Результат.НомерТелефона;
		KilBil_КодКарты		 = Результат.КодКарты;
		KilBil_Баланс	 	 = Результат.Баланс;
	Иначе
		KilBil_ИДКлиента 	 = Неопределено;
		KilBil_КодКарты		 = "";
		KilBil_НомерТелефона = "";
		KilBil_Баланс	 	 = 0;
	КонецЕсли;
	
	Модифицирован = Истина;
	
	Заказ.KilBil_ИДКлиента 	   = KilBil_ИДКлиента;
	Заказ.KilBil_НомерТелефона = KilBil_НомерТелефона;
	Заказ.KilBil_КодКарты 	   = KilBil_КодКарты;
	Заказ.KilBil_Баланс	   	   = KilBil_Баланс;
	
КонецПроцедуры
